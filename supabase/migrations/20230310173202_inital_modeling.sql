-- 
-- Create types
-- 
create type "public"."building_types" as enum ('residential', 'workplace', 'mixed', 'public');
create type "public"."contractor_types" as enum (
  'general',
  'architect',
  'engineer',
  'contractor',
  'inspector',
  'other'
);
create type "public"."energy_classes" as enum ('A', 'B', 'C', 'D', 'E', 'F', 'G');
--
-- Create tables
-- 
create table "public"."buildings" (
  "id" bigint generated by default as identity not null,
  "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "name" text,
  "type" building_types not null,
  "location" geography(POINT) not null,
  "address" text,
  "floor" integer,
  "year" integer,
  "energy_class" energy_classes,
  "constructor_id" bigint,
  "architect_id" bigint,
  "inspector_id" bigint
);
create table "public"."contractors" (
  "id" bigint generated by default as identity not null,
  "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "name" text,
  "type" contractor_types not null
);
create table "public"."reports" (
  "id" bigint generated by default as identity not null,
  "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "comment" text,
  "url" text,
  "building_id" bigint not null,
  "user_id" uuid not null
);
create table "public"."votes" (
  "id" bigint generated by default as identity not null,
  "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
  "report_id" bigint not null,
  "user_id" uuid not null,
  "vote" boolean default true
);
--
-- Create indexes
-- 
CREATE UNIQUE INDEX buildings_pkey ON public.buildings USING btree (id);
CREATE UNIQUE INDEX contractors_pkey ON public.contractors USING btree (id);
CREATE UNIQUE INDEX reports_pkey ON public.reports USING btree (id);
CREATE UNIQUE INDEX votes_pkey ON public.votes USING btree (id);
-- 
-- Create constraints
--
alter table "public"."buildings"
add constraint "buildings_pkey" PRIMARY KEY using index "buildings_pkey";
alter table "public"."contractors"
add constraint "contractors_pkey" PRIMARY KEY using index "contractors_pkey";
alter table "public"."reports"
add constraint "reports_pkey" PRIMARY KEY using index "reports_pkey";
alter table "public"."votes"
add constraint "votes_pkey" PRIMARY KEY using index "votes_pkey";
alter table "public"."buildings"
add constraint "architect_id" FOREIGN KEY (architect_id) REFERENCES contractors(id) ON DELETE RESTRICT not valid;
alter table "public"."buildings" validate constraint "architect_id";
alter table "public"."buildings"
add constraint "constructor_id" FOREIGN KEY (constructor_id) REFERENCES contractors(id) ON DELETE RESTRICT not valid;
alter table "public"."buildings" validate constraint "constructor_id";
alter table "public"."buildings"
add constraint "inspector_id" FOREIGN KEY (inspector_id) REFERENCES contractors(id) ON DELETE RESTRICT not valid;
alter table "public"."buildings" validate constraint "inspector_id";
alter table "public"."reports"
add constraint "building_id" FOREIGN KEY (building_id) REFERENCES buildings(id) ON DELETE RESTRICT not valid;
alter table "public"."reports" validate constraint "building_id";
alter table "public"."reports"
add constraint "user_id" FOREIGN KEY (user_id) REFERENCES next_auth.users(id) ON DELETE RESTRICT not valid;
alter table "public"."reports" validate constraint "user_id";
alter table "public"."votes"
add constraint "report_id" FOREIGN KEY (report_id) REFERENCES reports(id) ON DELETE RESTRICT not valid;
alter table "public"."votes" validate constraint "report_id";
alter table "public"."votes"
add constraint "user_id" FOREIGN KEY (user_id) REFERENCES next_auth.users(id) ON DELETE RESTRICT not valid;
alter table "public"."votes" validate constraint "user_id";
